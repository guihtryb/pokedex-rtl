{"version":3,"sources":["components/About.js","components/Button.js","components/Pokemon.js","types/index.js","components/FavoritePokemons.js","components/NotFound.js","components/Pokedex.js","components/PokemonDetails.js","services/pokedexService.js","data.js","App.js","serviceWorker.js","index.js"],"names":["About","className","src","alt","Button","children","disabled","onClick","dataTestId","data-testid","type","defaultProps","Pokemon","objectOf","bool","shape","averageWeight","measurementUnit","string","value","foundAt","arrayOf","location","map","id","number","image","moreInfo","name","summary","pokemon","showDetailsLink","isFavorite","to","FavoritePokemons","pokemons","this","props","renderFavoritePokemon","notFound","isEmpty","length","renderFavoritePokemons","key","React","Component","NotFound","role","aria-label","Pokedex","state","pokemonIndex","filteredType","setState","numberOfPokemons","filter","Set","reduce","types","pokemonTypes","fetchPokemonTypes","filterPokemons","isPokemonFavoriteById","filteredPokemons","fetchFilteredPokemons","renderPokemonButtonsPanel","nextPokemon","PokemonDetails","renderFavoriteInput","bind","givenId","find","pokemonId","onUpdateFavoritePokemons","htmlFor","checked","onChange","target","renderHabitat","renderSummary","match","params","findPokemon","parseInt","readFavoritePokemonIds","JSON","parse","localStorage","getItem","saveFavoritePokemons","setItem","stringify","updateFavoritePokemons","favoritePokemons","newFavoritePokemons","addPokemonToFavorites","removePokemonFromFavorites","App","setIsPokemonFavoriteById","exact","path","render","renderPokedex","renderPokemonDetails","component","renderRoutes","favoritePokemonIds","acc","includes","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85c862da.chunk.js","sourcesContent":["import React from 'react';\nimport './about.css';\n\nconst About = () => (\n  <section>\n    <h2>{ `About Pokédex` }</h2>\n    <section>\n      <p>\n        This application simulates a Pokédex, a\n        digital encyclopedia containing all Pokémons\n      </p>\n      <p>One can filter Pokémons by type, and see more details for each one of them</p>\n      <img\n        className=\"pokedex-image\"\n        src={ `https://cdn2.bulbagarden.net/upload/thumb/8/86/Gen_I_Pok%C3%A9dex.png/800px-Gen_I_Pok%C3%A9dex.png` }\n        alt=\"Pokédex\"\n      />\n    </section>\n  </section>\n);\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.css';\n\nconst Button = ({\n  className,\n  children,\n  disabled,\n  onClick,\n  dataTestId,\n}) => (\n  <button\n    onClick={ onClick }\n    className={ `button-text ${className}` }\n    disabled={ disabled }\n    data-testid={ dataTestId }\n    type=\"button\"\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  dataTestId: PropTypes.string,\n};\n\nButton.defaultProps = {\n  children: null,\n  className: '',\n  disabled: false,\n  dataTestId: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { pokemonType } from '../types';\n\nimport './pokemon.css';\n\nconst Pokemon = ({ pokemon, showDetailsLink, isFavorite }) => {\n  const { averageWeight, id, image, name, type } = pokemon;\n  const { measurementUnit, value } = averageWeight;\n\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon-overview\">\n        <p data-testid=\"pokemon-name\">{name}</p>\n        <p data-testid=\"pokemon-type\">{`${type}`}</p>\n        <p data-testid=\"pokemon-weight\">\n          Average weight: {value} {measurementUnit}\n        </p>\n        {showDetailsLink && <Link to={ `pokemons/${id}` }>More details</Link>}\n      </div>\n      <img src={ `${image}` } alt={ `${name} sprite` } />\n      {isFavorite && (\n        <img\n          className=\"favorite-icon\"\n          src={`/star-icon.svg`}\n          alt={ `${name} is marked as favorite` }\n        />\n      )}\n    </div>\n  );\n};\n\nPokemon.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  pokemon: pokemonType.isRequired,\n  showDetailsLink: PropTypes.bool,\n};\n\nPokemon.defaultProps = {\n  showDetailsLink: true,\n};\n\nexport default Pokemon;\n","import {\n  arrayOf,\n  bool,\n  number,\n  objectOf,\n  shape,\n  string,\n} from 'prop-types';\n\nexport const isPokemonFavoriteByIdType = objectOf(bool);\n\nexport const pokemonType = shape({\n  averageWeight: shape({\n    measurementUnit: string,\n    value: string,\n  }),\n  foundAt: arrayOf(shape({\n    location: string,\n    map: string,\n  })),\n  id: number,\n  image: string,\n  moreInfo: string,\n  name: string,\n  summary: string,\n  type: string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './favorite-pokemons.css';\n\nconst ZERO = 0;\n\nclass FavoritePokemons extends React.Component {\n  static notFound() {\n    return (\n      <div>\n        <p>{`No favorite pokemon found`}</p>\n      </div>\n    );\n  }\n\n  static renderFavoritePokemon(pokemon) {\n    return (\n      <div key={ pokemon.id } className=\"favorite-pokemon\">\n        <Pokemon pokemon={ pokemon } isFavorite />\n      </div>\n    );\n  }\n\n  renderFavoritePokemons() {\n    const { pokemons } = this.props;\n    const { renderFavoritePokemon } = FavoritePokemons;\n\n    return (\n      <div className=\"favorite-pokemons\">\n        {pokemons.map((pokemon) => renderFavoritePokemon(pokemon))}\n      </div>\n    );\n  }\n\n  render() {\n    const { notFound } = FavoritePokemons;\n    const { pokemons } = this.props;\n    const isEmpty = pokemons.length === ZERO;\n\n    return (\n      <div>\n        <h2>Favorite pokémons</h2>\n        {isEmpty ? notFound() : this.renderFavoritePokemons()}\n      </div>\n    );\n  }\n}\n\nFavoritePokemons.propTypes = {\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired),\n};\n\nFavoritePokemons.defaultProps = {\n  pokemons: [],\n};\n\nexport default FavoritePokemons;\n","import React from 'react';\nimport './not-found.css';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>\n      {`Page requested not found`}\n      <span role=\"img\" aria-label=\"Crying emoji\"> 😭</span>\n    </h2>\n    <img\n      className=\"not-found-image\"\n      src={`https://media.giphy.com/media/kNSeTs31XBZ3G/giphy.gif`}\n      alt=\"Pikachu crying because the page requested was not found\"\n    />\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={() => this.filterPokemons('all')}\n          className=\"filter-button\"\n        >\n          All\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            dataTestId={`pokemon-type-button`}\n            key={type}\n            onClick={() => this.filterPokemons(type)}\n            className=\"filter-button\"\n          >\n            {`${type}`}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <h2>{`Encountered pokémons ( ${filteredPokemons.length} )`}</h2>\n        <Pokemon\n          pokemon={pokemon}\n          isFavorite={isPokemonFavoriteById[pokemon.id]}\n        />\n        {this.renderPokemonButtonsPanel()}\n        <Button\n          dataTestId=\"next-pokemon\"\n          className=\"pokedex-button\"\n          onClick={() => this.nextPokemon(filteredPokemons.length)}\n          disabled={filteredPokemons.length <= 1}\n        >\n          Próximo pokémon\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './pokemon-details.css';\n\nclass PokemonDetails extends React.Component {\n  static renderHabitat({ foundAt, name }) {\n    return (\n      <section>\n        <h2>{`Game Locations of ${name}`}</h2>\n        <div className=\"pokemon-habitat\">\n          {foundAt.map(({ location, map }) => (\n            <div key={location}>\n              <img src={`${map}`} alt={`${name} location`} />\n              <p><em>{location}</em></p>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n\n  static renderSummary({ summary }) {\n    return (\n      <section>\n        <h2>{`Summary`}</h2>\n        <p>{`${summary}`}</p>\n      </section>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.renderFavoriteInput = this.renderFavoriteInput.bind(this);\n  }\n\n  findPokemon(givenId) {\n    const { pokemons } = this.props;\n\n    return pokemons.find(({ id }) => id === givenId);\n  }\n\n  renderFavoriteInput(pokemonId, isFavorite) {\n    const { onUpdateFavoritePokemons } = this.props;\n\n    return (\n      <form className=\"favorite-form\">\n        <label htmlFor=\"favorite\">\n          {`Pokémon favoritado?`}\n          <input\n            type=\"checkbox\"\n            id=\"favorite\"\n            checked={isFavorite}\n            onChange={\n              ({ target: { checked } }) => onUpdateFavoritePokemons(pokemonId, checked)\n            }\n          />\n        </label>\n      </form>\n    );\n  }\n\n  render() {\n    const { renderHabitat, renderSummary } = PokemonDetails;\n    const { renderFavoriteInput } = this;\n    const {\n      match: { params: { id } },\n      isPokemonFavoriteById,\n    } = this.props;\n\n    const pokemon = this.findPokemon(parseInt(id, 10));\n    const isFavorite = isPokemonFavoriteById[id];\n\n    return (\n      <section className=\"pokemon-details\">\n        <h2>{`${pokemon.name} Details`}</h2>\n        <Pokemon\n          pokemon={pokemon}\n          showDetailsLink={false}\n          isFavorite={isFavorite}\n        />\n        {renderSummary(pokemon)}\n        {renderHabitat(pokemon)}\n        {renderFavoriteInput(pokemon.id, isFavorite)}\n      </section>\n    );\n  }\n}\n\nPokemonDetails.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default PokemonDetails;\n","export const readFavoritePokemonIds = () => (\n  JSON.parse(localStorage.getItem('favoritePokemonIds')) || []\n);\n\nconst saveFavoritePokemons = (pokemons) => (\n  localStorage.setItem('favoritePokemonIds', JSON.stringify(pokemons))\n);\n\nconst addPokemonToFavorites = (pokemonId) => {\n  const favoritePokemons = readFavoritePokemonIds();\n  const newFavoritePokemons = [...favoritePokemons, pokemonId];\n\n  saveFavoritePokemons(newFavoritePokemons);\n};\n\nconst removePokemonFromFavorites = (pokemonId) => {\n  const favoritePokemons = readFavoritePokemonIds();\n  const newFavoritePokemons = favoritePokemons.filter((id) => id !== pokemonId);\n\n  saveFavoritePokemons(newFavoritePokemons);\n};\n\nexport const updateFavoritePokemons = (pokemonId, isFavorite) => (\n  isFavorite ? addPokemonToFavorites(pokemonId) : removePokemonFromFavorites(pokemonId)\n);\n","const pokemons = [\n  {\n    id: 25,\n    name: 'Pikachu',\n    type: 'Electric',\n    averageWeight: {\n      value: '6.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/b/b2/Spr_5b_025_m.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Pikachu_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Viridian Forest',\n        map: 'https://cdn2.bulbagarden.net/upload/0/08/Kanto_Route_2_Map.png',\n      },\n      {\n        location: 'Kanto Power Plant',\n        map: 'https://cdn2.bulbagarden.net/upload/b/bd/Kanto_Celadon_City_Map.png',\n      },\n    ],\n    summary: 'This intelligent Pokémon roasts hard berries with electricity to make them tender enough to eat.',\n  },\n  {\n    id: 4,\n    name: 'Charmander',\n    type: 'Fire',\n    averageWeight: {\n      value: '8.5',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/0/0a/Spr_5b_004.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Charmander_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Alola Route 3',\n        map: 'https://cdn2.bulbagarden.net/upload/9/93/Alola_Route_3_Map.png',\n      },\n      {\n        location: 'Kanto Route 3',\n        map: 'https://cdn2.bulbagarden.net/upload/4/4a/Kanto_Route_3_Map.png',\n      },\n      {\n        location: 'Kanto Route 4',\n        map: 'https://cdn2.bulbagarden.net/upload/2/24/Kanto_Route_4_Map.png',\n      },\n      {\n        location: 'Kanto Rock Tunnel',\n        map: 'https://cdn2.bulbagarden.net/upload/6/6f/Kanto_Rock_Tunnel_Map.png',\n      },\n    ],\n    summary: 'The flame on its tail shows the strength of its life force. If it is weak, the flame also burns weakly.',\n  },\n  {\n    id: 10,\n    name: 'Caterpie',\n    type: 'Bug',\n    averageWeight: {\n      value: '2.9',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/8/83/Spr_5b_010.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Caterpie_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Johto Route 30',\n        map: 'https://cdn2.bulbagarden.net/upload/7/76/Johto_Route_30_Map.png',\n      },\n      {\n        location: 'Johto Route 31',\n        map: 'https://cdn2.bulbagarden.net/upload/2/2b/Johto_Route_31_Map.png',\n      },\n      {\n        location: 'Ilex Forest',\n        map: 'https://cdn2.bulbagarden.net/upload/a/ae/Johto_Ilex_Forest_Map.png',\n      },\n      {\n        location: 'Johto National Park',\n        map: 'https://cdn2.bulbagarden.net/upload/4/4e/Johto_National_Park_Map.png',\n      },\n    ],\n    summary: 'For protection, it releases a horrible stench from the antennae on its head to drive away enemies.',\n  },\n  {\n    id: 23,\n    name: 'Ekans',\n    type: 'Poison',\n    averageWeight: {\n      value: '6.9',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/1/18/Spr_5b_023.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Ekans_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Goldenrod Game Corner',\n        map: 'https://cdn2.bulbagarden.net/upload/e/ec/Johto_Goldenrod_City_Map.png',\n      },\n    ],\n    summary: 'It can freely detach its jaw to swallow large prey whole. It can become too heavy to move, however.',\n  },\n  {\n    id: 65,\n    name: 'Alakazam',\n    type: 'Psychic',\n    averageWeight: {\n      value: '48.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/8/88/Spr_5b_065_m.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Alakazam_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Unova Accumula Town',\n        map: 'https://cdn2.bulbagarden.net/upload/4/44/Unova_Accumula_Town_Map.png',\n      },\n    ],\n    summary: 'Closing both its eyes heightens all its other senses. This enables it to use its abilities to their extremes.',\n  },\n  {\n    id: 151,\n    name: 'Mew',\n    type: 'Psychic',\n    averageWeight: {\n      value: '4.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/4/43/Spr_5b_151.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Mew_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Faraway Island',\n        map: 'https://cdn2.bulbagarden.net/upload/e/e4/Hoenn_Faraway_Island_Map.png',\n      },\n    ],\n    summary: 'Apparently, it appears only to those people who are pure of heart and have a strong desire to see it.',\n  },\n  {\n    id: 78,\n    name: 'Rapidash',\n    type: 'Fire',\n    averageWeight: {\n      value: '95.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/5/58/Spr_5b_078.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Rapidash_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Route 28',\n        map: 'https://cdn2.bulbagarden.net/upload/5/5b/Kanto_Route_28_Map.png',\n      },\n      {\n        location: 'Johto Mount Silver',\n        map: 'https://cdn2.bulbagarden.net/upload/9/95/Johto_Mt_Silver_Map.png',\n      },\n    ],\n    summary: 'At full gallop, its four hooves barely touch the ground because it moves so incredibly fast.',\n  },\n  {\n    id: 143,\n    name: 'Snorlax',\n    type: 'Normal',\n    averageWeight: {\n      value: '460.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/4/40/Spr_5b_143.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Snorlax_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Vermillion City',\n        map: 'https://cdn2.bulbagarden.net/upload/5/54/Kanto_Vermilion_City_Map.png',\n      },\n    ],\n    summary: 'What sounds like its cry may actually be its snores or the rumblings of its hungry belly.',\n  },\n  {\n    id: 148,\n    name: 'Dragonair',\n    type: 'Dragon',\n    averageWeight: {\n      value: '16.5',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn2.bulbagarden.net/upload/2/2c/Spr_5b_148.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Dragonair_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Johto Route 45',\n        map: 'https://cdn2.bulbagarden.net/upload/2/21/Johto_Route_45_Map.png',\n      },\n      {\n        location: 'Johto Dragon\\'s Den',\n        map: 'https://cdn2.bulbagarden.net/upload/1/1e/Johto_Dragons_Den_Map.png',\n      },\n    ],\n    summary: 'They say that if it emits an aura from its whole body, the weather will begin to change instantly.',\n  },\n];\n\nexport default pokemons;\n","// inniting project!\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport {\n  About,\n  FavoritePokemons,\n  NotFound,\n  Pokedex,\n  PokemonDetails,\n} from './components';\n\nimport {\n  readFavoritePokemonIds,\n  updateFavoritePokemons,\n} from './services/pokedexService';\n\nimport pokemons from './data';\n\nimport './App.css';\n\nclass App extends Component {\n  static setIsPokemonFavoriteById() {\n    const favoritePokemonIds = readFavoritePokemonIds();\n    const isPokemonFavorite = pokemons.reduce((acc, pokemon) => {\n      acc[pokemon.id] = favoritePokemonIds.includes(pokemon.id);\n      return acc;\n    }, {});\n\n    return isPokemonFavorite;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { isPokemonFavoriteById: App.setIsPokemonFavoriteById() };\n  }\n\n  onUpdateFavoritePokemons(pokemonId, isFavorite) {\n    updateFavoritePokemons(pokemonId, isFavorite);\n\n    this.setState(({ isPokemonFavoriteById: App.setIsPokemonFavoriteById() }));\n  }\n\n  renderPokedex() {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <Pokedex\n        pokemons={ pokemons }\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n      />\n    );\n  }\n\n  renderPokemonDetails(match) {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <PokemonDetails\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n        match={ match }\n        pokemons={ pokemons }\n        onUpdateFavoritePokemons={ (pokemonId, isFavorite) => (\n          this.onUpdateFavoritePokemons(pokemonId, isFavorite)\n        ) }\n      />\n    );\n  }\n\n  renderRoutes() {\n    const { isPokemonFavoriteById } = this.state;\n    const favoritePokemons = pokemons.filter(({ id }) => isPokemonFavoriteById[id]);\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={ ({ match }) => this.renderPokedex(match) }\n        />\n        <Route\n          path=\"/favorites\"\n          render={ () => <FavoritePokemons pokemons={ favoritePokemons } /> }\n        />\n        <Route\n          path=\"/pokemons/:id\"\n          render={ ({ match }) => this.renderPokemonDetails(match) }\n        />\n        <Route path=\"/about\" component={ About } />\n        <Route component={ NotFound } />\n      </Switch>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Pokédex</h1>\n          <nav>\n            <Link className=\"link\" to=\"/\">{`Home`}</Link>\n            <Link className=\"link\" to=\"/about\">{`About`}</Link>\n            <Link className=\"link\" to=\"/favorites\">{`Favorite Pokémons`}</Link>\n          </nav>\n        </header>\n        {this.renderRoutes()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}